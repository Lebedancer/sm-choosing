{"version":3,"sources":["stores/dashboardStore.ts","services/dashboardService.ts","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","routes/Dashboard/Dashboard.web/style.module.scss","routes/Dashboard/Dashboard.web/components/DashboardItem/style.module.scss","components/Actions/style.module.scss","../node_modules/regenerator-runtime/runtime.js","components/Actions/index.tsx","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","services/userService.ts","stores/userStore.ts","routes/Dashboard/Dashboard.web/components/DashboardItem/Store.ts","routes/Dashboard/Dashboard.web/components/DashboardItem/index.tsx","routes/Dashboard/Dashboard.web/Store.ts","routes/Dashboard/Dashboard.web/index.tsx"],"names":["Dashboard","axios","get","then","resp","data","list","loading","observable","module","exports","runtime","Op","Object","prototype","hasOwn","hasOwnProperty","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","_invoke","state","method","arg","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","done","value","makeInvokeMethod","fn","obj","call","err","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","this","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","previousPromise","callInvokeWithMethodAndArg","resolve","reject","invoke","result","__await","unwrapped","error","undefined","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","constructor","displayName","isGeneratorFunction","genFun","ctor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","toString","keys","object","key","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","Function","cn","classnames","bind","style","Index","className","props","map","item","isLoading","onClick","head","actions","renderLabel","renderList","React","Component","asyncGeneratorStep","gen","_next","_throw","_asyncToGenerator","args","arguments","apply","getData","userId","userName","action","Store","boardName","boardId","isListLoading","userStore","getUserId","getBoardRules","userRole","actionsList","getListForRole","store","Actions","loadList","image","textBlock","renderActionsSection","renderContent","observer","initObservers","observe","dashboardStore","change","newValue","DashboardItem","dashboard","sidebar","content"],"mappings":"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","file":"static/js/3.ad0c9c91.chunk.js","sourcesContent":["import { observable, action, computed } from 'mobx';\nimport { getData } from '../services/dashboardService';\nimport { BoardData } from '../types/BoardTypes';\n\nclass Dashboard {\n   @observable loading: boolean = true;\n   @observable list: BoardData[] = [];\n\n  constructor() {\n      getData()\n          .then(list => {\n              this.list = list\n              this.loading = false;\n          })\n  }\n\n}\n\nexport default new Dashboard();","import axios from \"axios\";\nimport { BoardData } from \"../types/BoardTypes\";\n\nexport const getData = (): Promise<BoardData[]> => {\n    return axios.get('http://localhost:3001/dashboards')\n        .then(resp => resp.data)\n}","module.exports = require(\"regenerator-runtime\");\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"style_dashboard__3teq2\",\"sidebar\":\"style_sidebar__1WF5B\",\"content\":\"style_content__1GKpG\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"style_item__3Uukv\",\"image\":\"style_image__OctIH\",\"actions\":\"style_actions__1T8if\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"actions\":\"style_actions__3DPPB\",\"list\":\"style_list__1xsdx\",\"loading\":\"style_loading__IDpi4\",\"blink-animation\":\"style_blink-animation__3ksec\",\"head\":\"style_head__gv5h6\"};","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  IteratorPrototype[iteratorSymbol] = function () {\n    return this;\n  };\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = Gp.constructor = GeneratorFunctionPrototype;\n  GeneratorFunctionPrototype.constructor = GeneratorFunction;\n  GeneratorFunctionPrototype[toStringTagSymbol] =\n    GeneratorFunction.displayName = \"GeneratorFunction\";\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      prototype[method] = function(arg) {\n        return this._invoke(method, arg);\n      };\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      if (!(toStringTagSymbol in genFun)) {\n        genFun[toStringTagSymbol] = \"GeneratorFunction\";\n      }\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  AsyncIterator.prototype[asyncIteratorSymbol] = function () {\n    return this;\n  };\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  Gp[toStringTagSymbol] = \"Generator\";\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  Gp[iteratorSymbol] = function() {\n    return this;\n  };\n\n  Gp.toString = function() {\n    return \"[object Generator]\";\n  };\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n}\n","import React from \"react\";\nimport style from \"./style.module.scss\";\nimport { ListItem } from \"../../types/CommonTypes\";\nimport classnames from \"classnames/bind\";\n\nconst cn = classnames.bind(style);\n\ninterface Iprops {\n    className?: string\n    isLoading: boolean\n    data: ListItem[] | undefined\n    onClick: () => void\n}\n\nclass Index extends React.Component<Iprops> {\n    renderLoading() {\n        return <span className={style.loading}>Loading</span>\n    }\n\n    renderList() {\n        const { data } = this.props;\n\n        if (!data || data.length <= 0) {\n            return null;\n        }\n\n        return <ul className={style.list}>\n            {data.map(item => <li>{item.name}</li>)}\n        </ul>\n    }\n\n    renderLabel() {\n        const { isLoading, onClick } = this.props;\n        return  isLoading ? <span>Loading.....</span> : <a className={style.head} onClick={onClick}>Actions</a>\n    }\n\n    render() {\n        const { className } = this.props;\n        return <div className={cn(style.actions, className)}>\n            {this.renderLabel()}\n            {this.renderList()}\n        </div>\n    };\n}\n\nexport default Index;","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import axios from \"axios\";\nimport { UserData } from \"../types/UserTypes\";\n\nexport const getData = (): Promise<UserData> => {\n    return axios.get('http://localhost:3001/userData')\n        .then(resp => resp.data)\n}\n","import {observable, action, computed} from 'mobx';\nimport {getData} from '../services/userService';\n\nclass BoardStore {\n    @observable public loading: boolean = true;\n    @observable public userId: number = -1;\n    @observable public userName: string = '';\n\n    constructor() {\n        getData()\n            .then(({userId, userName}) => {\n                this.loading = false\n                this.userName = userName\n                this.userId = userId\n            })\n    }\n\n    @action\n    async getUserId() {\n        let {userId} = this;\n\n        if (userId < 0) {\n            const result = await getData();\n            userId = result.userId\n        }\n\n        return userId\n    }\n}\n\nexport default new BoardStore();","import {observable, action, computed, observe} from 'mobx';\nimport {getBoardRules} from '../../../../../services/accessRulesService';\nimport userStore from '../../../../../stores/userStore';\nimport { UserRole } from '../../../../../types/BoardTypes';\nimport {ListItem} from \"../../../../../types/CommonTypes\";\n// import {BoardData} from \"../../../types/BoardTypes\";\n\n// import accessRulesStore from \"../../stores/accessRulesStore\";\n\nexport interface IStore {\n    boardName: string\n    boardId: number\n    actionsList: ListItem[] | undefined\n    isListLoading: boolean\n    loadList: () => void\n}\n\ninterface IProps {\n    boardName: string\n    boardId: number\n}\n\nexport class Store implements IStore {\n    @observable boardName = '';\n    @observable boardId = 0;\n    @observable public actionsList: ListItem[] | undefined;\n    @observable isListLoading = false;\n\n    constructor({boardName, boardId}: IProps) {\n        this.boardName = boardName;\n        this.boardId = boardId;\n    }\n\n    @action\n    async loadList() {\n        const {boardId} = this;\n\n        this.isListLoading = true;\n        const userId = await userStore.getUserId();\n\n        const {userRole} = await getBoardRules({boardId, userId});\n\n        this.actionsList = this.getListForRole(userRole)\n    }\n\n    getListForRole(userRole: UserRole) {\n        const list = [\n            {name: 'Move to project'},\n            {name: 'Open in new tab'},\n        ]\n\n        if (userRole === 'participant') {\n            list.push({name: 'Share'});\n            list.push({name: 'Rename'});\n            list.push({name: 'Duplicate'});\n        }\n\n        if (userRole === 'admin') {\n            list.push({name: 'Share'});\n            list.push({name: 'Rename'});\n            list.push({name: 'Duplicate'});\n            list.push({name: 'Delete'});\n            list.push({name: 'Change cover'});\n        }\n\n        return list;\n    }\n}\n\nexport default Store;\n","import React, { Fragment } from \"react\";\nimport style from \"./style.module.scss\";\nimport Actions from \"../../../../../components/Actions\";\nimport Store, { IStore } from \"./Store\";\nimport {observer} from \"mobx-react\";\n\ninterface Iprops {\n    boardName: string\n    boardId: number\n}\n\nclass Index extends React.Component<Iprops> {\n    public store: IStore;\n\n    constructor(props: any) {\n        super(props);\n\n        this.store = new Store(props);\n    }\n\n    renderActionsSection() {\n        const { actionsList, isListLoading } = this.store;\n\n        return <Actions\n            onClick={() => this.store.loadList()}\n            className={style.actions}\n            isLoading={isListLoading}\n            data={actionsList}\n        />\n    }\n\n    renderContent() {\n        const { boardName } = this.store;\n\n        return <Fragment>\n            <div className={style.image}/>\n            <div className={style.textBlock}>{boardName}</div>\n            {this.renderActionsSection()}\n        </Fragment>\n    }\n\n    render() {\n\n        return <div className={style.item}>\n            {this.renderContent()}\n        </div>\n    };\n}\n\nexport default observer(Index);","import { observable, action, computed, observe } from 'mobx';\nimport dashboardStore from '../../../stores/dashboardStore';\nimport {BoardData} from \"../../../types/BoardTypes\";\n\nexport interface IStore {\n  list: BoardData[]\n  loading: boolean\n}\nexport class Store implements IStore{\n  @observable list = dashboardStore.list;\n  @observable loading = dashboardStore.loading;\n\n  constructor() {\n    this.initObservers()\n  }\n\n  initObservers() {\n    observe(dashboardStore, (change) => {\n      if (change.type === \"update\") {\n        const {name, newValue} = change;\n\n        if (name === 'list') {\n          this.list = newValue\n        }\n\n        if (name === 'loading') {\n          this.loading = newValue\n        }\n      }\n    })\n  }\n}\n\nexport default Store;\n","import React from 'react';\nimport style from './style.module.scss';\nimport DashboardItem from './components/DashboardItem';\nimport Store, { IStore } from './Store';\nimport {observer} from \"mobx-react\";\n\nclass Index extends React.Component<any> {\n    private store: IStore;\n\n    constructor(props: any) {\n        super(props);\n\n        this.store = new Store();\n\n    }\n\n    renderList() {\n        const { list, loading } = this.store;\n\n        if (loading) {\n            return <div>Loading....</div>\n        }\n\n        return list.map(item => <DashboardItem {...item} />)\n\n    }\n    render() {\n        return <div className={style.dashboard}>\n            <aside className={style.sidebar}/>\n            <div className={style.content}>\n                {this.renderList()}\n            </div>\n        </div>\n    };\n}\n\nexport default observer(Index);"],"sourceRoot":""}