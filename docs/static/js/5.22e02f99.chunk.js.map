{"version":3,"sources":["components/modals/DeleteModal/style.module.scss","helpers/navigateHelper.ts","components/modals/DeleteModal/Store.ts","components/modals/DeleteModal/index.tsx"],"names":["module","exports","push","url","window","location","href","back","history","reload","Store","observe","boardStore","change","this","deleting","removeBoard","then","navigateHelper","observable","boardName","action","store","observer","onClose","isVisible","Modal","className","style","buttonsBar","Button","isLoading","onClick","onDelete"],"mappings":"oGACAA,EAAOC,QAAU,CAAC,WAAa,4B,qICWhB,I,MAAA,GAAEC,KAZV,SAAcC,GACjBC,OAAOC,SAASC,KAAOH,GAWJI,KARhB,WACHH,OAAOI,QAAQD,QAOUE,OAJtB,WACHL,OAAOC,SAASI,WCcLC,GAnBf,aAIE,aAAe,yFACbC,YAAQC,KAAY,SAAAC,OALxB,uDASsB,IAAD,OAEjB,OADAC,KAAKC,UAAW,EACTH,IAAWI,cACbC,MAAK,WACF,EAAKF,UAAW,EAChBG,EAAehB,KAAK,4CAdhC,wCACGiB,KADH,yEAC8BP,IAAWQ,aADzC,sCAEGD,KAFH,yEAEkC,KAFlC,oCASGE,KATH,wE,iBCGMC,EAAQ,IAAIZ,EA6BHa,uBAtBf,YAAwD,IAAjCC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,UACpBV,EAAaO,EAAbP,SAOR,OAAO,kBAACW,EAAA,EAAD,CACHF,QAASA,EACTC,UAAWA,GAEX,kDACA,kDAEA,6BAASE,UAAWC,IAAMC,YACtB,kBAACC,EAAA,EAAD,CAAQC,UAAWhB,EAAUiB,QAbpB,WACbV,EAAMW,WACDhB,MAAK,kBAAMO,SAWZ,UACA,kBAACM,EAAA,EAAD,CAAQE,QAASR,GAAjB","file":"static/js/5.22e02f99.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsBar\":\"style_buttonsBar__W2BqW\"};","export function push(url: string) {\n    window.location.href = url;\n}\n\nexport function back() {\n    window.history.back();\n}\n\nexport function reload() {\n    window.location.reload();\n}\n\nexport default { push, back, reload};","import { observable, action, computed, observe } from 'mobx';\nimport boardStore from '../../../stores/boardStore';\nimport navigateHelper from '../../../helpers/navigateHelper';\n\nexport class Store {\n  @observable title: string = boardStore.boardName;\n  @observable deleting: boolean = false;\n\n  constructor() {\n    observe(boardStore, change => {\n    })\n  }\n\n  @action onDelete() {\n    this.deleting = true;\n    return boardStore.removeBoard()\n        .then(() => {\n            this.deleting = false;\n            navigateHelper.push('http://localhost:3000/#/Dashboard');\n        })\n  }\n}\n\nexport default Store;\n","import React from \"react\";\nimport Modal from \"../../Modal\";\nimport Button from \"../../Button\";\nimport {observer} from \"mobx-react\";\nimport Store from \"./Store\";\nimport style from \"./style.module.scss\";\n\nconst store = new Store();\n\ntype CardProps = {\n    onClose: () => void,\n    isVisible: boolean\n}\n\nfunction DeleteModal({ onClose, isVisible}: CardProps) {\n    const { deleting } = store\n\n    const onDelete = () => {\n        store.onDelete()\n            .then(() => onClose())\n    }\n\n    return <Modal\n        onClose={onClose}\n        isVisible={isVisible}\n    >\n        <h1>Delete this board?</h1>\n        <p>You have bla-blabla</p>\n\n        <section className={style.buttonsBar}>\n            <Button isLoading={deleting} onClick={onDelete}>Delete</Button>\n            <Button onClick={onClose}>Cancel</Button>\n        </section>\n    </Modal>\n}\n\nexport default observer(DeleteModal);"],"sourceRoot":""}