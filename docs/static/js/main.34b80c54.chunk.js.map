{"version":3,"sources":["components/Button/index.tsx","stores/boardStore.ts","services/boardService.ts","routes/testSpace/components/DeepDataTest/style.module.scss","components/Modal/index.tsx","routes/testSpace/style.module.scss","routes/testSpace/components/AutoIncrementItem/style.module.scss","components/Button/style.module.scss","components/Modal/style.module.scss","style.module.scss","services/accessRulesService.ts","components/Input/index.tsx","components/Input/style.module.scss","components/modals/BoardTitleModal/style.module.scss","routes/Board/components/Canvas/index.tsx","stores/accessRulesStore.ts","routes/Board/components/Header/components/TitleBar/TitleBarStore.ts","components/modals/BoardTitleModal/BoardTitleStore.js","components/modals/BoardTitleModal/index.tsx","components/modals/ShareModal/index.tsx","components/modals/ShareModal/Store.ts","routes/testSpace/perfStore.ts","routes/Board/components/Header/components/TitleBar/index.tsx","routes/Board/components/Header/index.tsx","routes/Board/index.tsx","routes/Dashboard/Store.ts","routes/Dashboard/index.tsx","routes/testSpace/components/AutoIncrementItem/index.tsx","routes/testSpace/components/DeepDataTest/Store.ts","routes/testSpace/components/DeepDataTest/index.tsx","routes/testSpace/index.tsx","App.tsx","index.tsx"],"names":["Index","className","style","loading","this","props","onClick","children","isLoading","mButton","renderLoading","React","Component","BoardStore","axios","get","then","resp","data","boardName","boardId","title","id","post","observable","action","module","exports","cn","classnames","bind","Modal","modal","getWrapClassNames","isVisible","modalAnimationIn","modalAnimationOut","onMouseDown","event","target","getAttribute","onClose","createRef","ref","role","data-overlay","getData","getBoardRules","userId","params","onBlur","value","onChange","type","e","canShowShareButton","TitleBarStore","initObservers","isTitleDialogVisible","isShareDialogVisible","observe","boardStore","change","name","newValue","boardTitle","accessRulesStore","BoardTitleStore","onChangeTitle","isDeleteDialogShown","isDuplicateDialogShown","DeleteModal","lazy","DuplicateModal","BoardTitleModal","store","onCloseModal","onSave","Store","fallback","hideDeleteDialog","onSubmit","Input","val","buttonsBar","Button","showDeleteDialog","showDuplicateDialog","renderDeleteDialog","renderDuplicateDialog","renderOwnView","observer","autoApdater","Fragment","href","showModal","showShareModal","renderContent","hideModal","ShareModal","TitleBar","Header","Canvas","choosePlatform","canShowWeb","DashboardMobile","DashboardWeb","canShowMobile","renderMobileView","renderWebView","setInterval","autoIncrementTestName","clearInterval","removeAutoUpdater","initAutoUpdater","image","textBlock","item","testArray","text","Math","random","testObj","testCombination","massData","obj","one","two","three","four","ArrayItem","kiy","ObjItem","map","CombiSubItem","items","CombiItem","itemObj","Object","values","index","paddingLeft","tip","toggleTestArrayChange","render1lvlArray","toggleTestObjChange","toggleTestObjBlock","render1lvlObj","toggleTestCombiBlock","toggleTestCombiItem","renderMultiLvlArray","toggleMasData","injectMasData","autoIncrementCount","perfStore","list","i","push","AutoIncrementItem","testSection","testSectionList","toggleIncrement","DeepDataTest","renderUiTest","renderStoreMemoryTest","App","nav","path","component","Board","exact","Dashboard","testSpace","withRouter","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.34b80c54.chunk.js","sourcesContent":["import React from \"react\";\nimport style from \"./style.module.scss\";\n\nclass Index extends React.Component<any> {\n    renderLoading() {\n        return <span className={style.loading}>Loading</span>\n    }\n\n    render() {\n        const { onClick, children, isLoading } = this.props;\n        return <button\n            className={style.mButton}\n            onClick={onClick}\n        >\n\n            {isLoading ? this.renderLoading() : children}\n        </button>\n    };\n}\n\nexport default Index;","import { observable, action, computed } from 'mobx';\nimport { getData } from '../services/accessRulesService';\nimport { deleteBoard, loadBoard } from '../services/boardService';\n\nclass BoardStore {\n  @observable public boardName: string = ''\n  @observable public boardId: number = 0;\n  @observable public loading: boolean = true;\n\n  constructor() {\n      this.loading = true;\n      loadBoard()\n          .then(({ boardName, boardId}) => {\n              this.boardName = boardName\n              this.boardId = boardId\n              this.loading = false;\n          })\n  }\n\n  @action onChangeTitle({title}: {title: string}) {\n      this.boardName = title\n  }\n\n    @action removeBoard() {\n        return deleteBoard(this.boardId)\n    }\n}\n\nexport default new BoardStore();","import axios from 'axios';\nimport { BoardData } from '../types/BoardTypes';\n\nexport const loadBoard = (): Promise<BoardData> => {\n    return axios.get('http://localhost:3001/boardInfo')\n        .then(resp => resp.data)\n}\n\nexport const deleteBoard = function (id: number) {\n    return axios.post('http://localhost:3001/board/delete', {id})\n}\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"style_item__2343w\",\"tip\":\"style_tip__2zmJL\"};","import React from 'react';\nimport classnames from 'classnames/bind';\nimport { Portal } from 'react-portal';\nimport style from './style.module.scss';\n\nconst cn = classnames.bind(style);\n\nclass Modal extends React.Component<any> {\n    private modal: any\n\n    constructor(props: any) {\n        super(props);\n\n        this.modal = React.createRef();\n    }\n\n    getWrapClassNames = () => {\n        const {\n            isVisible,\n        } = this.props;\n\n        return cn(`modal__wrap`, {\n            modalAnimationIn: isVisible,\n            modalAnimationOut: !isVisible,\n        });\n    }\n\n    onMouseDown = (event: any) => {\n        const isOverlay = !!event.target.getAttribute(`data-overlay`);\n\n        if (!isOverlay) {\n            return;\n        }\n\n        this.props.onClose();\n    }\n\n    render() {\n            const {\n                children,\n            } = this.props;\n\n            return (\n                <Portal>\n                    <div\n                        ref={this.modal}\n                        className={this.getWrapClassNames()}\n                        onMouseDown={this.onMouseDown}\n                        role=\"presentation\"\n                        data-overlay=\"1\"\n                    >\n                        <div className={style.modal}>\n                            {children}\n                        </div>\n                    </div>\n                </Portal>\n            );\n    }\n}\n\nexport default Modal;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"testSection\":\"style_testSection__2-Hgo\",\"testSectionList\":\"style_testSectionList__2pVrc\",\"tip\":\"style_tip__3n_Hq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"style_item__zOKNe\",\"textBlock\":\"style_textBlock__cK_nS\",\"actions\":\"style_actions__2Q_Rv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mButton\":\"style_mButton__sozU8\",\"loading\":\"style_loading__2TbSY\",\"blink-animation\":\"style_blink-animation__2y1OE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal__wrap\":\"style_modal__wrap__3YJZV\",\"modal\":\"style_modal__2m6kQ\",\"modalAnimationIn\":\"style_modalAnimationIn__2G8EA\",\"fadein\":\"style_fadein__sbovT\",\"modalAnimationOut\":\"style_modalAnimationOut__1xKkO\",\"fadeout\":\"style_fadeout__18FUp\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"style_nav__3wEDU\"};","import axios from \"axios\";\nimport { BoardAccessRules } from \"../types/BoardTypes\";\n\ntype GetBoardRulesInput = {\n    boardId: number\n    userId: number\n}\n\nexport const getData = (): Promise<{ canShowShareButton: boolean }> => {\n    return axios.get('http://localhost:3001/accessRules')\n        .then(resp => resp.data)\n}\n\nexport const getBoardRules = ({ boardId, userId }: GetBoardRulesInput): Promise<BoardAccessRules> => {\n    return axios.get('http://localhost:3001/accessRulesForBoard', {\n        params: {\n            boardId,\n            userId\n        }\n    })\n        .then(resp => resp.data)\n}","import React from \"react\";\nimport classnames from \"classnames/bind\";\nimport style from \"./style.module.scss\";\n\nconst cn = classnames.bind(style);\n\ntype Props = {\n    value?: any\n    className?: string\n    onChange: (e: string) => void\n    onBlur?: () => void\n\n}\n\nclass Index extends React.Component<Props> {\n    onBlur() {\n        const { onBlur } = this.props;\n        onBlur && onBlur()\n    }\n\n    render() {\n        const { value, className, onChange } = this.props;\n        return <input\n            type=\"text\"\n            value={value}\n            onChange={(e) => onChange(e.target.value)}\n            onBlur={this.onBlur}\n            className={cn('input', className)}\n        />\n    };\n}\n\nexport default Index;","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"style_input__1k1f5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"buttonsBar\":\"style_buttonsBar__ktykb\"};","import React from \"react\";\nimport \"./style.css\"\n\nclass Index extends React.Component<any> {\n    render() {\n        return <div className=\"canvas\">\n        </div>\n    };\n}\n\nexport default Index;","import { observable, action, computed } from 'mobx';\nimport { getData } from '../services/accessRulesService';\n\nclass BoardStore {\n    @observable public loading: boolean = true;\n    @observable public canShowShareButton: boolean = true;\n\n    constructor() {\n        getData()\n            .then(({ canShowShareButton}) => {\n                this.canShowShareButton = canShowShareButton\n            })\n    }\n}\n\nexport default new BoardStore();","import {observable, action, observe} from 'mobx';\nimport boardStore from '../../../../../../stores/boardStore';\nimport accessRulesStore from '../../../../../../stores/accessRulesStore';\n\ntype LoadingObj = {\n    isBoardDataLoading: boolean\n    isAccessRulesLoading: boolean\n}\n\nclass TitleBarStore {\n    @observable public isLoading = boardStore.loading;\n    @observable public boardTitle = boardStore.boardName;\n    @observable public canShowShareButton = accessRulesStore.canShowShareButton;\n    @observable public isTitleDialogVisible = false;\n    @observable public isShareDialogVisible = false;\n\n    // private loadingObj: LoadingObj = {\n    //     isBoardDataLoading: true,\n    //     isAccessRulesLoading: true,\n    // };\n\n    constructor() {\n        this.initObservers()\n    }\n\n    @action showModal() {\n        this.isTitleDialogVisible = true;\n        this.isShareDialogVisible = false;\n    }\n\n    @action showShareModal() {\n        this.isShareDialogVisible = true;\n        this.isTitleDialogVisible = false;\n    }\n\n    @action hideModal() {\n        this.isTitleDialogVisible = false;\n    }\n\n    @action hideShareModal() {\n        this.isShareDialogVisible = false;\n    }\n\n    initObservers() {\n        observe(boardStore, (change) => {\n            if (change.type === \"update\") {\n\n                const {name, newValue} = change;\n\n                if (name === 'boardName') {\n                    this.boardTitle = newValue\n                }\n\n                if (name === 'loading') {\n                    this.isLoading = newValue\n                }\n            }\n        })\n\n        observe(accessRulesStore, (change) => {\n            if (change.type === \"update\") {\n\n                const {name, newValue} = change;\n\n                if (name === 'canShowShareButton') {\n                    this.canShowShareButton = newValue\n                }\n            }\n        })\n    }\n}\n\nexport default TitleBarStore;","import { observable, action, computed, observe } from 'mobx';\nimport boardStore from '../../../stores/boardStore';\n\nexport class BoardTitleStore {\n  @observable title = boardStore.boardName;\n  @observable isDeleteDialogShown = false;\n  @observable isDuplicateDialogShown = false;\n\n  constructor() {\n    observe(boardStore, change => {\n    })\n  }\n\n  @action onChangeTitle(value) {\n    this.title = value;\n  }\n\n  @action onSave() {\n    boardStore.onChangeTitle({\n      title: this.title\n    })\n  }\n\n  @action showDeleteDialog() {\n    this.isDeleteDialogShown = true;\n    this.isDuplicateDialogShown = false;\n  }\n\n  @action hideDeleteDialog() {\n    this.isDeleteDialogShown = false\n  }\n\n  @action showDuplicateDialog() {\n    this.isDuplicateDialogShown = true;\n    this.isDeleteDialogShown = false;\n  }\n\n  @action hideDuplicateDialog() {\n    this.isDuplicateDialogShown = false;\n  }\n}\n\nexport default BoardTitleStore;\n","import React, { Suspense } from \"react\";\nimport Modal from \"../../Modal\";\nimport Input from \"../../Input\";\nimport Button from \"../../Button\";\nimport {observer} from \"mobx-react\";\nimport Store from \"./BoardTitleStore\";\nimport style from \"./style.module.scss\";\n\ntype CardProps = {\n    onClose: () => void,\n    isVisible: boolean\n}\nconst DeleteModal = React.lazy(() => import('../DeleteModal'));\nconst DuplicateModal = React.lazy(() => import('../DuplicateModal'));\n\nclass BoardTitleModal extends React.Component<CardProps> {\n    private store: any;\n\n    constructor(props: CardProps) {\n        super(props);\n        this.store = new Store();\n    }\n\n    onCloseModal = () => {\n        let {onClose} = this.props;\n\n        this.store.onSave()\n        onClose && onClose()\n    }\n\n    renderDuplicateDialog() {\n        return <Suspense fallback={<div>Loading...</div>}>\n            <DuplicateModal\n                isVisible\n                onClose={() => this.store.hideDeleteDialog()}\n                onSubmit={() => {}}\n            />\n        </Suspense>\n    }\n\n    renderDeleteDialog() {\n        return <Suspense fallback={<div>Loading...</div>}>\n            <DeleteModal isVisible onClose={() => this.store.hideDeleteDialog()}/>\n        </Suspense>\n    }\n\n    renderOwnView() {\n        let {isVisible} = this.props;\n        const {title} = this.store;\n\n\n        return <Modal\n            onClose={this.onCloseModal}\n            isVisible={isVisible}\n        >\n            <section>\n                <Input\n                    value={title}\n                    onChange={(val: string) => this.store.onChangeTitle(val)}\n                />\n            </section>\n            <section className={style.buttonsBar}>\n                <Button onClick={() => this.store.showDeleteDialog()}>Delete</Button>\n                <Button onClick={() => this.store.showDuplicateDialog()}>Duplicate</Button>\n                <Button>Share</Button>\n            </section>\n        </Modal>\n    }\n\n    render() {\n        const {isDeleteDialogShown, isDuplicateDialogShown} = this.store;\n\n        if (isDeleteDialogShown) {\n            return this.renderDeleteDialog()\n        }\n\n        if (isDuplicateDialogShown) {\n            return this.renderDuplicateDialog()\n        }\n\n        return this.renderOwnView()\n    }\n}\n\nexport default observer(BoardTitleModal);","import React from \"react\";\nimport Modal from \"../../Modal\";\nimport Input from \"../../Input\";\nimport Button from \"../../Button\";\nimport {observer} from \"mobx-react\";\nimport Store from \"./Store\";\nimport style from \"./style.module.scss\";\n\ntype CardProps = {\n    onClose: () => void,\n    isVisible: boolean\n}\n\nconst store = new Store();\n\nfunction BoardTitleModal({ onClose, isVisible}: CardProps) {\n\n    return <Modal\n        onClose={onClose}\n        isVisible={isVisible}\n    >\n\n    </Modal>\n}\n\nexport default observer(BoardTitleModal);","import { observable, action, computed, observe } from 'mobx';\n// import boardDataStore from '../../stores/boardDataStore';\n\nclass BoardTitleStore {\n  // @observable title = boardDataStore.boardName;\n\n  constructor() {\n    // observe(boardDataStore, change => {\n    // })\n  }\n}\n\nexport default BoardTitleStore;\n","import { observable, action, computed, observe } from 'mobx';\nimport dashboardStore from '../../stores/dashboardStore';\nimport {BoardData} from \"../../types/BoardTypes\";\n\n// import accessRulesStore from \"../../stores/accessRulesStore\";\n\nlet autoApdater: any;\n\nexport interface IStore {\n  autoIncrementTestName: number\n}\nexport class Store implements IStore{\n  @observable autoIncrementTestName = 1;\n  @observable autoIncrementCount = 100;\n\n  // constructor() {\n  //   this.initAutoUpdater()\n  // }\n\n  initAutoUpdater() {\n    autoApdater = setInterval(() => {\n      this.autoIncrementTestName += 1;\n    }, 300)\n  }\n\n  removeAutoUpdater() {\n    clearInterval(autoApdater);\n    autoApdater = null;\n  }\n\n  @action toggleIncrement() {\n    if (autoApdater) {\n        this.removeAutoUpdater();\n    } else {\n        this.initAutoUpdater();\n    }\n  }\n}\n\nexport default new Store();\n","import React from \"react\";\nimport Button from \"../../../../../../components/Button\";\nimport TitleBarStore from \"./TitleBarStore\";\nimport {observer} from \"mobx-react\";\nimport \"./style.css\"\nimport BoardTitleModal from \"../../../../../../components/modals/BoardTitleModal\";\nimport ShareModal from \"../../../../../../components/modals/ShareModal\";\n\nclass Index extends React.Component<any> {\n    private store: any;\n\n    constructor(props: any) {\n        super(props);\n\n        this.store = new TitleBarStore();\n    }\n\n    renderContent() {\n        const {canShowShareButton, boardTitle } = this.store;\n\n        return <React.Fragment>\n                <a href=\"#grid\">\n                    <h1>Miro</h1>\n                </a>\n                <button onClick={() => this.store.showModal()}>\n                    <h1>{boardTitle}</h1>\n                </button>\n                {canShowShareButton && <Button\n                    onClick={() => this.store.showShareModal()}\n                >Share</Button>}\n        </React.Fragment>\n    }\n\n    render() {\n        const { isTitleDialogVisible, isShareDialogVisible, isLoading } = this.store;\n\n        return <React.Fragment>\n            <div className=\"titleBar\">\n                {isLoading ? 'loading' : this.renderContent()}\n            </div>\n            {isTitleDialogVisible && <BoardTitleModal\n                onClose={() => this.store.hideModal()}\n                isVisible\n            />}\n            {isShareDialogVisible && <ShareModal\n            onClose={() => this.store.hideModal()}\n            isVisible\n        />}\n        </React.Fragment>\n    };\n}\n\nexport default observer(Index);","import React from \"react\";\nimport TitleBar from \"./components/TitleBar\";\n\nclass Index extends React.Component<any> {\n    render() {\n        return <div className=\"board\">\n            <TitleBar />\n        </div>\n    };\n}\n\nexport default Index;","import React from \"react\";\nimport Canvas from \"./components/Canvas\";\nimport Header from \"./components/Header\";\nimport { observer } from \"mobx-react\";\n\nclass Index extends React.Component<any> {\n    render() {\n        return <div className=\"board\">\n            <Header />\n            <Canvas />\n        </div>\n    };\n}\n\nexport default observer(Index);","import { observable, action, computed, observe } from 'mobx';\n\nexport interface IStore {\n  canShowMobile: boolean\n  canShowWeb: boolean\n  choosePlatform: () => void\n}\nexport class Store implements IStore{\n  @observable canShowMobile = false;\n  @observable canShowWeb = false;\n\n  constructor() {\n    this.choosePlatform()\n  }\n\n  choosePlatform() {\n    const isWeb = true;\n\n    if (isWeb) {\n      this.canShowWeb = true;\n    } else {\n      this.canShowMobile = true;\n    }\n  }\n}\n\nexport default Store;\n","import React, {Suspense, Fragment } from 'react';\nimport style from './style.module.scss';\nimport Store, { IStore } from './Store';\nimport {observer} from \"mobx-react\";\n\nconst DashboardMobile = React.lazy(() => import('./Dashboard.mobile'));\nconst DashboardWeb = React.lazy(() => import('./Dashboard.web'));\n\nclass Index extends React.Component<any> {\n    private store: IStore;\n\n    constructor(props: any) {\n        super(props);\n\n        this.store = new Store();\n    }\n\n    renderWebView() {\n        return <Suspense fallback={<div>Loading...</div>}>\n            <DashboardWeb />\n        </Suspense>\n    }\n\n    renderMobileView() {\n        return <Suspense fallback={<div>Loading...</div>}>\n            <DashboardMobile />\n        </Suspense>\n    }\n\n    render() {\n        const { canShowMobile } = this.store;\n        return <Fragment>\n            {canShowMobile ? this.renderMobileView() : this.renderWebView()}\n        </Fragment>\n    };\n}\n\nexport default observer(Index);","import React, { Fragment } from \"react\";\nimport style from \"./style.module.scss\";\nimport {observer} from \"mobx-react\";\n\nclass Index extends React.Component<any> {\n    renderContent() {\n        const { autoIncrementTestName } = this.props.store;\n\n        return <Fragment>\n            <div className={style.image}/>\n            <div className={style.textBlock}>{autoIncrementTestName}</div>\n        </Fragment>\n    }\n\n    render() {\n\n        return <div className={style.item}>\n            {this.renderContent()}\n        </div>\n    };\n}\n\nexport default observer(Index);","import { observable, action, computed, observe } from 'mobx';\n\nlet autoApdater: any;\n\n\nexport class Store{\n    @observable massData = [\n        {obj: {\n                one: ['123213', '123213',  '123213',],\n                two: ['22222', '22222', '22222', '22222',],\n                three: ['333333', '333333', '333333'],\n                four: [{text: 'testArray1'}, {text: 'testArray1'}, {text: 'testArray1'}, {text: 'testArray1'}],\n            }},\n        {obj: {\n                one: ['123213', '123213',  '123213',],\n                two: ['22222', '22222', '22222', '22222',],\n                three: ['333333', '333333', '333333'],\n                four: [{text: 'testArray1'}, {text: 'testArray1'}, {text: 'testArray1'}, {text: 'testArray1'}],\n            }},\n        {obj: {\n                one: ['123213', '123213',  '123213',],\n                two: ['22222', '22222', '22222', '22222',],\n                three: ['333333', '333333', '333333'],\n                four: [{text: 'testArray1'}, {text: 'testArray1'}, {text: 'testArray1'}, {text: 'testArray1'}],\n            }},\n        {obj: {\n                one: ['123213', '123213',  '123213',],\n                two: ['22222', '22222', '22222', '22222',],\n                three: ['333333', '333333', '333333'],\n                four: [{text: 'testArray1'}, {text: 'testArray1'}, {text: 'testArray1'}, {text: 'testArray1'}],\n            }},\n    ]\n\n  @observable testArray = [\n    {text: 'testArray1'},\n    {text: 'testArray2'},\n    {text: 'testArray3'},\n    {text: 'testArray4'},\n  ];\n\n  @observable testObj = {\n    one: ['123213', '123213',  '123213',],\n    two: ['22222', '22222', '22222', '22222',],\n    three: ['333333', '333333', '333333'],\n    four: ['4444444', '4444444', '4444444', '4444444'],\n  }\n\n  @observable testCombination = [\n    {obj: {\n        one: ['123213', '123213',  '123213',],\n        two: ['22222', '22222', '22222', '22222',],\n        three: ['333333', '333333', '333333'],\n        four: ['4444444', '4444444', '4444444', '4444444'],\n      }},\n    {obj: {\n        one: ['123213', '123213',  '123213',],\n        two: ['22222', '22222', '22222', '22222',],\n        three: ['333333', '333333', '333333'],\n        four: ['4444444', '4444444', '4444444', '4444444'],\n      }},\n    {obj: {\n        one: ['123213', '123213',  '123213',],\n        two: ['22222', '22222', '22222', '22222',],\n        three: ['333333', '333333', '333333'],\n        four: ['4444444', '4444444', '4444444', '4444444'],\n      }},\n    {obj: {\n        one: ['123213', '123213',  '123213',],\n        two: ['22222', '22222', '22222', '22222',],\n        three: ['333333', '333333', '333333'],\n        four: ['4444444', '4444444', '4444444', '4444444'],\n      }},\n  ]\n\n  @action toggleTestArrayChange() {\n      this.testArray[0].text = `${Math.random()}`;\n  }\n\n  @action toggleTestObjChange() {\n    this.testObj['four'][0] = `${Math.random()}`;\n  }\n\n  @action toggleTestObjBlock() {\n    this.testObj['four'] = [`${Math.random()}`, `${Math.random()}`, `${Math.random()}`,];\n  }\n\n    @action toggleTestCombiBlock() {\n        this.testCombination[0]['obj']['four'] = [`${Math.random()}`, `${Math.random()}`, `${Math.random()}`,];\n    }\n\n    @action toggleTestCombiItem() {\n        this.testCombination[0]['obj']['four'][0] = `${Math.random()}`;\n    }\n\n    @action toggleMasData() {\n        this.massData = [...this.massData];\n    }\n\n    @action injectMasData() {\n        this.massData[0]['obj']['four']  = [{text: 'testArray1'}, {text: 'testArray1'}, {text: 'testArray1'}, {text: 'testArray1'}];\n    }\n}\n\nexport default new Store();\n","import React, { Fragment } from \"react\";\nimport style from \"./style.module.scss\";\nimport {observer} from \"mobx-react\";\nimport store from \"./Store\";\nimport Button from \"../../../../components/Button\";\n\nconst ArrayItem = observer(function(props: any) {\n    const { testArray } = store;\n    const { kiy } = props;\n    const { text } = testArray[kiy];\n\n    return <li>{text}</li>\n})\n\nconst ObjItem = observer(function(props: any) {\n    const itemArr = props.item;\n\n    return itemArr.map((item: any) => <li>{item}</li>)\n})\n\nconst CombiSubItem = observer(function({ items }) {\n    return items.map((item: any) => <li>{item}</li>)\n})\n\n// @ts-ignore\nconst CombiItem = observer(function(props: any) {\n    const itemObj = props.item;\n    const values = Object.values(itemObj.obj)\n\n    return values.map((item: any) => <CombiSubItem items={item}/>)\n})\n\n\nclass Index extends React.Component<any> {\n\n    render1lvlArray() {\n        const { testArray } = store;\n\n        return <ul>{\n            testArray.map((item, index) => <ArrayItem store={store} kiy={index} />)\n        }</ul>\n    }\n\n    render1lvlObj() {\n        const { testObj } = store;\n\n        const values = Object.values(testObj);\n\n        return <ul>{\n            // no rerender of parent component\n            values.map((item, index) => <ObjItem item={item} />)\n        }</ul>\n    }\n\n    renderMultiLvlArray() {\n        const { testCombination } = store;\n\n        return <ul style={{paddingLeft: 60}}>{\n            // no rerender of parent component\n            testCombination.map((item, index) => <CombiItem item={item} />)\n        }</ul>\n    }\n\n    render() {\n        return <div className={style.item}>\n            <section>\n                <div className={style.tip}>Test shows how mobx will update nested values in object</div>\n                <Button onClick={() => store.toggleTestArrayChange()}>toggle</Button>\n                {this.render1lvlArray()}\n            </section>\n            <section>\n                <div className={style.tip}>Test shows how mobx will update nested values in array</div>\n                <Button onClick={() => store.toggleTestObjChange()}>toggle obj</Button>\n                <Button onClick={() => store.toggleTestObjBlock()}>toggle obj section</Button>\n                {this.render1lvlObj()}\n            </section>\n            <section>\n                <div className={style.tip}>Test shows how mobx will update deeeep nested values</div>\n                <Button onClick={() => store.toggleTestCombiBlock()}>toggle block</Button>\n                <Button onClick={() => store.toggleTestCombiItem()}>toggle item</Button>\n                {this.renderMultiLvlArray()}\n            </section>\n            <section>\n                <div className={style.tip}>Test shows how much memory mobx needed to change huge amounts of data </div>\n                <Button onClick={() => store.toggleMasData()}>toggleMasData</Button>\n                <Button onClick={() => store.injectMasData()}>injectMasData</Button>\n            </section>\n        </div>\n    };\n}\n\nexport default observer(Index);","import React, {Suspense, Fragment } from 'react';\nimport style from './style.module.scss';\nimport {observer} from \"mobx-react\";\nimport perfStore from \"./perfStore\";\nimport AutoIncrementItem from \"./components/AutoIncrementItem\";\nimport DeepDataTest from \"./components/DeepDataTest\";\nimport Button from \"../../components/Button\";\n\nclass Index extends React.Component<any> {\n    renderUiTest() {\n        const { autoIncrementCount } = perfStore;\n        const list: any[] = [];\n\n        for (let i = 0; i <= autoIncrementCount; i++ ) {\n            list.push(<AutoIncrementItem store={perfStore} /> );\n        }\n\n        return <div className={style.testSection}>\n            <div className={style.tip}>Test shows how fast mobx will render changes in dozen components from single store</div>\n            <section className={style.testSectionList}>\n                {list}\n            </section>\n            <section>\n                <Button onClick={() => perfStore.toggleIncrement()}>Start/stop</Button>\n            </section>\n        </div>\n    }\n\n    renderStoreMemoryTest() {\n        return <div>\n            <DeepDataTest />\n        </div>;\n    }\n\n    render() {\n        return <div>\n            {this.renderUiTest()}\n            <hr/>\n            {this.renderStoreMemoryTest()}\n        </div>\n    };\n}\n\nexport default observer(Index);","import React from 'react';\nimport {Switch, Route, withRouter} from 'react-router-dom';\nimport Board from './routes/Board';\nimport Dashboard from './routes/Dashboard';\nimport testSpace from './routes/testSpace';\nimport style from './style.module.scss';\n\nclass App extends React.Component<any> {\n    render() {\n        return <div className={style.App}>\n            <section className={style.nav}>\n                <a href=\"#/\">main</a>\n                <a href=\"#/dashboard\">dashboard</a>\n                <a href=\"#/test\">test</a>\n            </section>\n            <Switch>\n                <Route path=\"/\" component={Board} exact/>\n                <Route path=\"/Dashboard\" component={Dashboard}/>\n                <Route path=\"/test\" component={testSpace}/>\n            </Switch>\n        </div>\n    };\n}\n\nexport default withRouter(App);\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { HashRouter } from \"react-router-dom\";\nimport './index.css';\nimport App from './App';\nimport { initMobxSpy } from './helpers/tracer';\n\n// initMobxSpy() // whole project\n\nReactDOM.render(\n  // <React.StrictMode>\n      <HashRouter>\n        <App />\n      </HashRouter>\n  ,\n  // </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}